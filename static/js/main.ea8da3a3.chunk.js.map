{"version":3,"sources":["utils/Helper.js","reducers/cardReducer.js","components/Card/Card.js","components/CardCollection/CardCollection.js","components/GameScreen/GameScreenProperty/GameScreenProperty.js","components/GameScreen/GameScreen.js","components/MenuLink/MenuLink.js","components/Menu/Menu.js","components/DifficultySelectScreen/DifficultySelectScreen.js","components/Scoreboard/ScoreboardEntry/ScoreboardEntry.js","components/Scoreboard/Scoreboard.js","components/ScoreboardInput/ScoreboardInput.js","components/About/About.js","components/BackButton/BackButton.js","components/App/App.js","store.js","serviceWorker.js","index.js"],"names":["cardIcons","getRandomInt","min","max","Math","ceil","floor","random","getValue","values","length","initialState","cards","matchedCards","selectedCards","time","difficulty","score","name","select","x","y","type","payload","resetState","cardReducer","state","arguments","undefined","action","_objectSpread","Date","now","selected","concat","filter","card","value","matched","Card","_ref","handleClick","className","cardSize","style","width","height","react_default","a","createElement","onClick","index_es","icon","CardCollection","stateUpdated","selectAfterTimeout","_useState","useState","_useState2","Object","slicedToArray","windowWidth","setWindowWidth","_useState3","_useState4","windowHeight","setWindowHeight","_useState5","_useState6","renderedContent","setRenderedContent","_useState7","_useState8","setStyle","_useState9","_useState10","prevSelected","setPrevSelected","useEffect","updateWindowDimensions","window","innerWidth","innerHeight","cardSizeDesktop","cardSizeTablet","cardSizeMobile","react_router","to","map","index","cardClass","includes","prev","slice","components_Card_Card","key","gridForDifficulty","i","toFixed","gridTemplateColumns","gridTemplateRows","GameScreenProperty","build_default","Minutes","formatValue","Seconds","mapDispatchToProps","initializeCards","dispatch","uniqueRandomInts","indexOf","push","j","splice","timeout","setTimeout","connect","setStateUpdated","GameScreen_GameScreenProperty_GameScreenProperty","onStop","setTime","components_CardCollection_CardCollection","MenuLink","href","text","react_router_dom","links","renderedLinks","link","components_MenuLink_MenuLink","difficultyList","ScoreboardEntry","Scoreboard","propScoreboard","scoreboard","sort","b","renderedScoreboard","entry","Scoreboard_ScoreboardEntry_ScoreboardEntry","setName","setScore","redirect","setRedirect","onSubmit","event","preventDefault","fullScore","scoreArray","JSON","parse","localStorage","getItem","lowerElements","element","lowerElementsSorted","setItem","stringify","saveToScoreboardAndReturnScore","htmlFor","onChange","target","About","svgSize","faGithub","faLinkedin","withRouter","history","location","pathname","Fragment","goBack","faArrowLeft","App","_ref$history","library","add","faAmbulance","faAnchor","faBabyCarriage","faBath","faBed","faBeer","faBell","faBicycle","faBinoculars","faBomb","faBook","faBug","faBus","faCamera","faCandyCane","faCar","faCloud","faDrum","faFeather","faGuitar","faHeadphones","faHeart","faHelicopter","faKey","faLightbulb","faLock","faMoon","faRocket","faTv","faUmbrella","faStar","faWrench","components_BackButton_BackButton","browserHistory","exact","path","render","components_Menu_Menu","_ref2","match","components_GameScreen_GameScreen","params","components_DifficultySelectScreen_DifficultySelectScreen","components_Scoreboard_Scoreboard","components_ScoreboardInput_ScoreboardInput","components_About_About","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","es","components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ea8da3a3.chunk.js","sourcesContent":["export const cardIcons = ['ambulance', 'anchor', 'baby-carriage', 'bath', 'bed', 'beer', 'bell', 'bicycle',\r\n                            'binoculars', 'bomb', 'book', 'bug', 'bus', 'camera', 'candy-cane', 'car',\r\n                            'cloud', 'drum', 'feather', 'guitar', 'headphones', 'heart', 'helicopter', 'key',\r\n                            'lightbulb', 'lock', 'moon', 'rocket', 'tv', 'umbrella', 'star', 'wrench'];\r\n\r\nexport const scoreArrayKey = 'scoreArray';\r\n\r\nexport const smallBreakpoint = 360;\r\nexport const mediumBreakpoint = 768;\r\nexport const largeBreakpoint = 1024;\r\n\r\nexport const getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nexport const getValue = (values) => {\r\n    let rand = getRandomInt(0, values.length - 1);\r\n    return values[rand];\r\n};\r\n\r\nexport const saveToScoreboardAndReturnScore = (score, name) => {\r\n    let scoreArray = JSON.parse(localStorage.getItem(scoreArrayKey)) || [];\r\n\r\n    if (!scoreArray.includes({score, name})) {\r\n        const lowerElements = scoreArray.filter(element => element.score < score);\r\n        \r\n        if (lowerElements.length > 0) {\r\n            const lowerElementsSorted = lowerElements.sort((a, b) => (a.score - b.score));\r\n            scoreArray[scoreArray.indexOf(lowerElementsSorted[0])] = {score, name};\r\n        } else if (scoreArray.length < 10) {\r\n            scoreArray.push({score, name});\r\n        }\r\n        \r\n        localStorage.setItem(scoreArrayKey, JSON.stringify(scoreArray));\r\n    }\r\n\r\n    return score;\r\n};\r\n\r\nexport const getScoreboard = () => {\r\n    return JSON.parse(localStorage.getItem(scoreArrayKey)) || [];\r\n};\r\n\r\nexport const getTimeSinceStart = (startTime) => {\r\n    return (Date.now() - startTime);\r\n};","import { getRandomInt, getValue } from '../utils/Helper';\r\n\r\nexport const initialState = {\r\n    cards: [],\r\n    matchedCards: [],\r\n    selectedCards: [],\r\n    time: 0,\r\n    difficulty: 1,\r\n    score: 0,\r\n    name: ''\r\n};\r\n\r\nconst cardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'INIT_CARDS':\r\n            return {\r\n                ...state,\r\n                difficulty: action.payload.difficulty,\r\n                cards: action.payload.cards,\r\n                time: Date.now()\r\n            };\r\n        case 'CARD_SELECTED': {\r\n            const selected = state.selectedCards.concat(state.cards.filter(card => card.x === action.payload.x && card.y === action.payload.y));\r\n\r\n            if (selected.length === 2) {\r\n                if (selected[0].value === selected[1].value) {\r\n\r\n                    const matched = state.matchedCards.concat(selected);\r\n\r\n                    if (matched.length === state.cards.length) {\r\n                        return {\r\n                            ...state,\r\n                            score: state.difficulty >= 3 ? state.score += 60 : state.score += 40,\r\n                            cards: [],\r\n                            selectedCards: [],\r\n                            matchedCards: []\r\n                        };\r\n                    }\r\n\r\n                    return {\r\n                        ...state,\r\n                        score: state.score += 40,\r\n                        matchedCards: matched,\r\n                        selectedCards: []\r\n                    };\r\n                } else if (action.payload.x === -1 && action.payload.y === -1) {\r\n                    return {\r\n                        ...state,\r\n                        selectedCards: []\r\n                    };\r\n                } else {\r\n                    return {\r\n                        ...state,\r\n                        selectedCards: selected\r\n                    };\r\n                }\r\n            } else if (selected.length > 2) {\r\n                return {\r\n                    ...state,\r\n                    selectedCards: []\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    selectedCards: selected\r\n                };\r\n            }\r\n        }\r\n        case 'SET_NAME':\r\n            return {\r\n                ...state,\r\n                name: action.payload\r\n            };\r\n        case 'SET_SCORE':\r\n            return {\r\n                ...state,\r\n                score: action.payload\r\n            };\r\n        case 'RESET_STATE': \r\n            return initialState;\r\n        case 'SET_TIME': \r\n            return {\r\n                ...state,\r\n                time: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializeCards = (difficulty) => {\r\n    return dispatch => {\r\n        let cards = [];\r\n        let values = [];\r\n        let uniqueRandomInts = [];\r\n        let max;\r\n        \r\n        if (difficulty <= 4 && difficulty >= 1) {\r\n            max = difficulty * 2;\r\n        } else {\r\n            max = 8;\r\n            difficulty = 4;\r\n        }\r\n    \r\n        for (let i = 0; i < max * difficulty; i++) {\r\n            let random;\r\n\r\n            do  {\r\n                //Up to 31 - max index of cardIcons array used for storing icon names\r\n                random = getRandomInt(0, 31);\r\n            } while (uniqueRandomInts.indexOf(random) !== -1);\r\n            \r\n            values.push(random);\r\n            uniqueRandomInts.push(random);\r\n        }\r\n        \r\n        values = values.concat(values);\r\n        for (let i = 0; i < max; i++) {\r\n            for (let j = 0; j < max; j++) {\r\n                cards.push({x: i, y: j, value: getValue(values)});\r\n                                \r\n                values.splice(values.indexOf(cards[cards.length - 1].value), 1);\r\n            }\r\n        }\r\n        \r\n        dispatch({\r\n            type: 'INIT_CARDS',\r\n            payload: {\r\n                difficulty,\r\n                cards\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const select = (x, y) => {\r\n    return {\r\n        type: 'CARD_SELECTED',\r\n        payload: {\r\n            x, y\r\n        }\r\n    };\r\n};\r\n\r\nexport const selectAfterTimeout = (x, y, timeout) => {\r\n    return dispatch => {\r\n\r\n        setTimeout(() => {\r\n            dispatch(select(x, y));\r\n        }, timeout);\r\n    };\r\n};\r\n\r\nexport const setScore = (score) => {\r\n    return {\r\n        type: 'SET_SCORE',\r\n        payload: score\r\n    };\r\n};\r\n\r\nexport const setName = (name) => {\r\n    return {\r\n        type: 'SET_NAME',\r\n        payload: name\r\n    };\r\n};\r\n\r\nexport const resetState = () => {\r\n    return {\r\n        type: 'RESET_STATE'\r\n    };\r\n};\r\n\r\nexport const setTime = (time) => {\r\n    return {\r\n        type: 'SET_TIME',\r\n        payload: time\r\n    };\r\n};\r\n\r\nexport default cardReducer;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './Card.scss';\r\n\r\nconst Card = ({ value, handleClick, className, cardSize }) => {   \r\n    const style = {width: `${cardSize}px`, height: `${cardSize}px`};\r\n\r\n    return (\r\n        <div className={className} onClick={handleClick}>\r\n            <div className=\"svg-wrapper-backside\">\r\n                <div className=\"svg-wrapper\">\r\n                    <FontAwesomeIcon icon={value} style={style}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { smallBreakpoint, mediumBreakpoint } from '../../utils/Helper';\r\nimport Card from '../Card/Card';\r\nimport './CardCollection.scss';\r\n\r\nexport const CardCollection = ({ cards, matchedCards, selectedCards, difficulty, select, cardIcons, stateUpdated, selectAfterTimeout }) => {\r\n\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n    const [renderedContent, setRenderedContent] = useState([]);\r\n    const [style, setStyle] = useState({});\r\n    const [prevSelected, setPrevSelected] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const updateWindowDimensions = () => {\r\n            setWindowWidth(window.innerWidth);\r\n            setWindowHeight(window.innerHeight);\r\n        };\r\n\r\n        updateWindowDimensions();\r\n\r\n        return updateWindowDimensions;\r\n    });\r\n\r\n    useEffect(() => {\r\n        const cardSizeDesktop = [100, 80, 60, 40];\r\n        const cardSizeTablet = [100, 70, 50, 35];\r\n        const cardSizeMobile = [100, 55, 35, 25];\r\n\r\n        setRenderedContent(\r\n            cards.length === 0 && stateUpdated ? <Redirect to=\"/scoreboard/input\" /> : cards.map((card, index) => {\r\n\r\n                let cardClass = (matchedCards.includes(card) ? 'card matched' : \r\n                    (selectedCards.includes(card) ? 'card selected' : \r\n                    (prevSelected.includes(card) ? 'card to-hide' : 'card')));\r\n\r\n                const handleClick = matchedCards.includes(card) || selectedCards.includes(card) ? () => {} : \r\n                    () => {\r\n                        select(card.x, card.y);\r\n                        let prev = prevSelected.concat(card);\r\n\r\n                        if (prev.length > 2) {\r\n                            prev = prev.slice(2);\r\n                        }\r\n\r\n                        setPrevSelected(prev);\r\n                        \r\n                        if (prev.length === 2) {\r\n                            if (prev[0].value !== prev[1].value) {\r\n                                cardClass = 'card to-hide';\r\n                                selectAfterTimeout(-1, -1, 500);\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                let cardSize = windowWidth <= smallBreakpoint ? cardSizeMobile[difficulty - 1] :\r\n                                    (windowWidth <= mediumBreakpoint ? cardSizeTablet[difficulty - 1] : cardSizeDesktop[difficulty - 1]);\r\n                                    \r\n                if (windowWidth > windowHeight && \r\n                        (windowWidth <= mediumBreakpoint || windowHeight <= mediumBreakpoint)) {\r\n                    cardSize -= (windowWidth <= smallBreakpoint || windowHeight <= smallBreakpoint ? 20 : 15);\r\n                }\r\n\r\n                return (\r\n                    <Card key={card.value * index + difficulty + index} value={cardIcons[card.value]} \r\n                        handleClick={handleClick} className={cardClass} cardSize={cardSize} />\r\n                );\r\n            })\r\n        );\r\n\r\n        let gridForDifficulty = '';\r\n\r\n        for (let i = 0; i < difficulty * 2; i++) {\r\n            gridForDifficulty += `${(100 / ( difficulty * 2)).toFixed(2)}% `;\r\n        }\r\n    \r\n        setStyle({\r\n            gridTemplateColumns: gridForDifficulty,\r\n            gridTemplateRows: gridForDifficulty\r\n        });\r\n\r\n        return () => {\r\n            if (prevSelected.length >= 2) {\r\n                setPrevSelected([]);\r\n            }\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [cards, selectedCards, matchedCards, windowWidth]);\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"card-collection\" style={style}>\r\n            {renderedContent}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardCollection;","import React from 'react';\r\nimport Timer from 'react-compound-timer'; \r\nimport './GameScreenProperty.scss';\r\n\r\nconst GameScreenProperty = ({name, value}) => {\r\n    return (\r\n        <div className=\"game-screen-property\">\r\n            <span className=\"name\">{`${name}: `}</span>\r\n            <span className=\"value\">\r\n            {\r\n                name !== 'Time' ?\r\n                value.toFixed(2) : \r\n                <Timer>\r\n                    <Timer.Minutes formatValue={value => `${value < 10 ? `0${value}` : value}:`} />\r\n                    <Timer.Seconds formatValue={value => `${value < 10 ? `0${value}` : value}`} />\r\n                </Timer>\r\n            }\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameScreenProperty;","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { select, initializeCards, setTime, selectAfterTimeout } from '../../reducers/cardReducer';\r\nimport CardCollection from '../CardCollection/CardCollection';\r\nimport GameScreenProperty from './GameScreenProperty/GameScreenProperty';\r\nimport './GameScreen.scss';\r\n\r\nexport const GameScreen = ({cards, matchedCards, selectedCards, difficulty, select, initializeCards, cardIcons, score, selectAfterTimeout}) => {\r\n\r\n    const [stateUpdated, setStateUpdated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        initializeCards(difficulty);\r\n        setStateUpdated(true);\r\n    }, [difficulty, initializeCards]);\r\n\r\n    return (\r\n        <div className=\"game-screen-wrapper\">\r\n            <div className=\"top-section\">\r\n                <GameScreenProperty name={'Time'} value={null} onStop={(time) => setTime(time)} />\r\n                <GameScreenProperty name={'Score'} value={score} />\r\n            </div>\r\n            <div className=\"bottom-section\">\r\n                <CardCollection stateUpdated={stateUpdated} cards={cards} matchedCards={matchedCards} selectedCards={selectedCards}\r\n                    select={select} difficulty={difficulty} cardIcons={cardIcons} selectAfterTimeout={selectAfterTimeout} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    state = state.cardReducer;\r\n    return {\r\n        cards: state.cards,\r\n        matchedCards: state.matchedCards,\r\n        selectedCards: state.selectedCards,\r\n        time: state.time,\r\n        score: state.score\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    select,\r\n    initializeCards,\r\n    selectAfterTimeout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameScreen);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MenuLink.scss';\r\n\r\nconst MenuLink = ({ href, text, className }) => {\r\n\r\n    return (\r\n        <div className={`menu-link ${className}`}>\r\n            <Link to={href}>\r\n                {text}\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuLink;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { resetState } from '../../reducers/cardReducer';\r\nimport MenuLink from '../MenuLink/MenuLink';\r\nimport './Menu.scss';\r\n\r\nexport const Menu = ({ links, resetState }) => {\r\n\r\n    useEffect(() => {\r\n        resetState();\r\n    }, [resetState]);\r\n\r\n    const renderedLinks = links.map(link => \r\n        (<MenuLink key={link.href.length * link.name.length} href={link.href} className=\"primary\" text={link.name} />));\r\n\r\n    return (\r\n        <div className=\"menu-wrapper\">\r\n            {renderedLinks}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, {resetState})(Menu);","import React, { useEffect } from 'react';\r\nimport { resetState } from '../../reducers/cardReducer';\r\nimport { connect } from 'react-redux';\r\nimport MenuLink from '../MenuLink/MenuLink';\r\nimport './DifficultySelectScreen.scss';\r\n\r\nexport const DifficultySelectScreen = ({ difficultyList, resetState }) => {\r\n\r\n    useEffect(() => {\r\n        resetState();\r\n    }, [resetState]);\r\n\r\n    const renderedLinks = difficultyList.map((difficulty, index) => (\r\n        <MenuLink key={difficulty.value * difficulty.name.length + index} href={`/game/${difficulty.value}`} \r\n            text={difficulty.name} className=\"primary\" />\r\n    ));\r\n\r\n\r\n    return (\r\n        <div className=\"difficulty-select-screen-wrapper\">\r\n            {renderedLinks}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, {resetState})(DifficultySelectScreen);","import React from 'react';\r\nimport './ScoreboardEntry.scss';\r\n\r\nconst ScoreboardEntry = ({ name, score }) => (\r\n    <div className=\"scoreboard-entry\">\r\n        <span className=\"name\">\r\n            {`${name}: `}\r\n        </span>\r\n        <span className=\"score\">\r\n            {score.toFixed(2)}\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default ScoreboardEntry;","import React from 'react';\r\nimport ScoreboardEntry from './ScoreboardEntry/ScoreboardEntry';\r\nimport './Scoreboard.scss';\r\n\r\nconst Scoreboard = ({propScoreboard}) => {\r\n\r\n    let scoreboard = propScoreboard;\r\n    scoreboard = scoreboard.sort((a, b) => {\r\n        if (a.score < b.score) {\r\n            return 1;\r\n        } else if (a.score > b.score) {\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    const renderedScoreboard = propScoreboard === [] || propScoreboard === undefined || propScoreboard.length === 0 ? \r\n        <h1>Nothing to show. Play the game to get your score saved!</h1> :\r\n        scoreboard.map(entry => (\r\n            <ScoreboardEntry key={entry.score * entry.name.length} score={entry.score} name={entry.name} />\r\n        ));\r\n\r\n    return (\r\n        <div className=\"scoreboard-wrapper\">\r\n            <header className=\"scoreboard-header\">\r\n                <h4>10 highest scores of all time:</h4>\r\n            </header>\r\n            <div className=\"scoreboard-content\">\r\n                {renderedScoreboard}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scoreboard;","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setScore, setName } from '../../reducers/cardReducer';\r\nimport { saveToScoreboardAndReturnScore } from '../../utils/Helper';\r\nimport './ScoreboardInput.scss';\r\n\r\nconst ScoreboardInput = ({ score, name, time, setScore, setName }) => {\r\n    \r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const fullScore = score - ((Date.now() - time) / 1000) ; \r\n\r\n        setScore(fullScore);\r\n        saveToScoreboardAndReturnScore(fullScore, name);\r\n        setRedirect(true);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"scoreboard-input-wrapper\">\r\n            {\r\n                redirect || score === 0 ? <Redirect to=\"/\" /> :\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor=\"name\">Your name</label>\r\n                        <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n                        <button type=\"submit\">Save your score</button>\r\n                    </form>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    state = state.cardReducer;\r\n    return {\r\n        score: state.score,\r\n        name: state.name,\r\n        time: state.time\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setName,\r\n    setScore\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScoreboardInput);","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\nimport './About.scss';\r\n\r\nconst About = () => {\r\n\r\n    const svgSize = {width: '2rem', height: '2rem'};\r\n\r\n    return(\r\n        <div className=\"about-wrapper\">\r\n            <header className=\"about-header\">\r\n                <h1>Card matching game</h1>\r\n            </header>\r\n            <section className=\"about-content\">\r\n                <p>Made by Michal Drabik</p>\r\n                <div className=\"about-socials\">\r\n                    <span className=\"github\">\r\n                        <a href=\"https://github.com/micdra7\">\r\n                            <FontAwesomeIcon icon={faGithub} style={svgSize} />\r\n                        </a>\r\n                    </span>\r\n                    <span className=\"linkedin\">\r\n                        <a href=\"https://www.linkedin.com/in/micha%C5%82-drabik-5497b4191/\">\r\n                            <FontAwesomeIcon icon={faLinkedin} style={svgSize} />\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n \r\nexport default About;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport './BackButton.scss';\r\n\r\nexport const BackButton = ({ history, location }) => {\r\n\r\n    return (\r\n        <div className=\"back-button\">\r\n            {\r\n                location.pathname === '/' ?\r\n                <></> : \r\n                <button type=\"button\" onClick={() => history.goBack()}>\r\n                    <FontAwesomeIcon icon={faArrowLeft} style={{width: '2rem', height: '2rem'}} />\r\n                </button>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(BackButton);","import React from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport GameScreen from '../GameScreen/GameScreen';\r\nimport Menu from '../Menu/Menu';\r\nimport DifficultySelectScreen from '../DifficultySelectScreen/DifficultySelectScreen';\r\nimport Scoreboard from '../Scoreboard/Scoreboard';\r\nimport ScoreboardInput from '../ScoreboardInput/ScoreboardInput';\r\nimport About from '../About/About'; \r\nimport BackButton from '../BackButton/BackButton';\r\nimport { getScoreboard } from '../../utils/Helper';\r\nimport { cardIcons } from '../../utils/Helper';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faAmbulance, faAnchor, faBabyCarriage, faBath, faBed, faBeer, faBell, faBicycle,\r\n        faBinoculars, faBomb, faBook, faBug, faBus, faCamera, faCandyCane, faCar,\r\n        faCloud, faDrum, faFeather, faGuitar, faHeadphones, faHeart, faHelicopter, faKey,\r\n        faLightbulb, faLock, faMoon, faRocket, faTv, faUmbrella, faStar, faWrench} from '@fortawesome/free-solid-svg-icons';\r\nimport './App.scss';\r\n\r\nconst App = ({ history = null}) => {\r\n\r\n    library.add(faAmbulance, faAnchor, faBabyCarriage, faBath, faBed, faBeer, faBell, faBicycle,\r\n                faBinoculars, faBomb, faBook, faBug, faBus, faCamera, faCandyCane, faCar,\r\n                faCloud, faDrum, faFeather, faGuitar, faHeadphones, faHeart, faHelicopter, faKey,\r\n                faLightbulb, faLock, faMoon, faRocket, faTv, faUmbrella, faStar, faWrench);\r\n\r\n    const links = [{href: '/game/difficulty/choose', name: 'Start game'}, {href: '/scoreboard', name: 'Scoreboard'}, {href: '/about', name: 'About'}];\r\n    const difficultyList = [{value: 1, name: 'Easy'}, {value: 2, name: 'Normal'}, {value: 3, name: 'Hard'}, {value: 4, name: 'Very hard'}];\r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <Router>\r\n                <BackButton browserHistory={history} />\r\n                <Route exact path=\"/\" render={() => <Menu links={links} />} />\r\n                <Route exact path=\"/game/:difficulty\" render={({ match }) => <GameScreen difficulty={match.params.difficulty} cardIcons={cardIcons} />} />\r\n                <Route exact path=\"/game/difficulty/choose\" render={() => <DifficultySelectScreen difficultyList={difficultyList} />} />\r\n                <Route exact path=\"/scoreboard\" render={() => <Scoreboard propScoreboard={getScoreboard()} />} />\r\n                <Route path=\"/scoreboard/input\" render={() => <ScoreboardInput />} />\r\n                <Route path=\"/about\" render={() => <About />} />\r\n            </Router>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport cardReducer from './reducers/cardReducer';\r\n\r\nconst reducer = combineReducers({\r\n    cardReducer\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","/* eslint-disable no-undef */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport App from './components/App/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root'));\n\nserviceWorker.register();"],"sourceRoot":""}